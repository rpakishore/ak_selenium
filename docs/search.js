window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "ak_selenium", "modulename": "ak_selenium", "kind": "module", "doc": "<h1 id=\"project-layout\">Project Layout</h1>\n\n<pre class=\"mermaid-pre\"><div class=\"mermaid\">graph TB\n    subgraph User[\"Application Layer\"]\n        UserCode[\"User Code\"]\n    end\n\n    subgraph Auto[\"Browser Automation Layer\"]\n        BaseBrowser[\"Base Browser Class\"]\n        Chrome[\"Chrome Implementation\"]\n        Firefox[\"Firefox Implementation\"]\n        HeliumInt[\"Helium Integration\"]\n    end\n\n    subgraph Req[\"Request Integration Layer\"]\n        SessionMgmt[\"Session Management\"]\n        AntiBot[\"Anti-bot Features\"]\n        HeaderTransfer[\"Header/Cookie Transfer\"]\n    end\n\n    subgraph Ext[\"External Dependencies\"]\n        Selenium[\"Selenium WebDriver\"]\n        Helium[\"Helium\"]\n        Requests[\"Requests Library\"]\n    end\n\n    subgraph Test[\"Testing Layer\"]\n        BrowserTests[\"Browser Tests\"]\n        RequestTests[\"Request Tests\"]\n    end\n\n    %% Relationships\n    UserCode --&gt; BaseBrowser\n    UserCode --&gt; SessionMgmt\n\n    BaseBrowser --&gt; Chrome\n    BaseBrowser --&gt; Firefox\n    BaseBrowser --&gt; HeliumInt\n\n    Chrome --&gt; Selenium\n    Firefox --&gt; Selenium\n    HeliumInt --&gt; Helium\n\n    SessionMgmt --&gt; Requests\n    SessionMgmt --&gt; AntiBot\n    SessionMgmt --&gt; HeaderTransfer\n\n    BrowserTests --&gt; BaseBrowser\n    RequestTests --&gt; SessionMgmt\n\n    %% Click Events\n    click BaseBrowser \"https://github.com/rpakishore/ak_selenium/blob/main/src/ak_selenium/browser.py\"\n    click Chrome \"https://github.com/rpakishore/ak_selenium/blob/main/src/ak_selenium/chrome.py\"\n    click Firefox \"https://github.com/rpakishore/ak_selenium/blob/main/src/ak_selenium/firefox.py\"\n    click HeliumInt \"https://github.com/rpakishore/ak_selenium/blob/main/src/ak_selenium/helium_attribs.py\"\n    click SessionMgmt \"https://github.com/rpakishore/ak_selenium/blob/main/src/ak_selenium/browser.py\"\n    click RequestTests \"https://github.com/rpakishore/ak_selenium/blob/main/src/tests/test_requests.py\"\n    click BrowserTests \"https://github.com/rpakishore/ak_selenium/blob/main/src/tests/test_browser.py\"\n\n    %% Styling\n    classDef default fill:#f9f9f9,stroke:#333,stroke-width:2px\n    classDef browser fill:#dae8fc,stroke:#6c8ebf\n    classDef request fill:#d5e8d4,stroke:#82b366\n    classDef external fill:#fff2cc,stroke:#d6b656\n    classDef test fill:#e1d5e7,stroke:#9673a6\n\n    class BaseBrowser,Chrome,Firefox,HeliumInt browser\n    class SessionMgmt,AntiBot,HeaderTransfer request\n    class Selenium,Helium,Requests external\n    class BrowserTests,RequestTests test\n\n    %% Legend\n    subgraph Legend\n        Browser[\"Browser Components\"]:::browser\n        RequestComp[\"Request Components\"]:::request\n        Ext[\"External Dependencies\"]:::external\n        TestComp[\"Test Components\"]:::test\n    end\n   \n</div></pre>\n\n<!--- Heading --->\n\n<div align=\"center\">\n  <h1>ak_selenium</h1>\n  <p>\n    Selenium package with requests integration and anti-bot detection measures\n  </p>\n<h4>\n    <a href=\"https://rpakishore.github.io/ak_selenium/\">Documentation</a>\n  <span> \u00b7 </span>\n    <a href=\"https://github.com/rpakishore/ak_selenium/issues/\">Report Bug</a>\n  <span> \u00b7 </span>\n    <a href=\"https://github.com/rpakishore/ak_selenium/issues/\">Request Feature</a>\n  </h4>\n</div>\n\n<p><br /></p>\n\n<p><img src=\"https://img.shields.io/github/commit-activity/m/rpakishore/ak_selenium\" alt=\"GitHub commit activity\" />\n<img src=\"https://img.shields.io/github/last-commit/rpakishore/ak_selenium\" alt=\"GitHub last commit\" />\n<a href=\"https://github.com/rpakishore/ak_selenium/actions/workflows/test.yml\"><img src=\"https://github.com/rpakishore/ak_selenium/actions/workflows/test.yml/badge.svg\" alt=\"tests\" /></a></p>\n\n<!-- Table of Contents -->\n\n<h2>Table of Contents</h2>\n\n<ul>\n<li><a href=\"#1-about-the-project\">1. About the Project</a>\n<ul>\n<li><a href=\"#11-features\">1.1. Features</a></li>\n<li><a href=\"#2-installation\">2. Installation</a></li>\n</ul></li>\n<li><a href=\"#3-usage\">3. Usage</a>\n<ul>\n<li><a href=\"#31-additional-options\">3.1. Additional Options</a></li>\n</ul></li>\n<li><a href=\"#4-roadmap\">4. Roadmap</a></li>\n<li><a href=\"#5-license\">5. License</a></li>\n<li><a href=\"#6-contact\">6. Contact</a></li>\n</ul>\n\n<!-- About the Project -->\n\n<h2 id=\"1-about-the-project\">1. About the Project</h2>\n\n<p><code>ak_selenium</code> is a Python package that provides an interface for automating browser tasks using Selenium. It comes with built-in functionalities for handling common tasks such as form filling, scrolling, and waiting for elements to load. Additionally, it has a built-in requests session that handles retries and timeouts, making it easier to send HTTP requests.</p>\n\n<!-- Features -->\n\n<h3 id=\"11-features\">1.1. Features</h3>\n\n<ul>\n<li>Chrome browser automation using Selenium WebDriver.</li>\n<li>Built-in methods for form filling, scrolling, and waiting for elements.</li>\n<li>Anti-bot detection measures</li>\n<li>Pass selenium headers/cookies to requests library</li>\n<li>Built-in requests session with retries and timeouts.</li>\n<li>Ability to use Chrome user data for browser automation.</li>\n<li>RAM optimization for browser options.</li>\n<li>Integrates <a href=\"https://github.com/mherrmann/helium\">Helium</a> for easier automation</li>\n</ul>\n\n<!-- Installation -->\n\n<h3 id=\"2-installation\">2. Installation</h3>\n\n<p>use pip</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>ak_selenium@git+https://github.com/rpakishore/ak_selenium\n</code></pre>\n</div>\n\n<!-- Usage -->\n\n<h2 id=\"3-usage\">3. Usage</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ak_selenium</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Chrome</span><span class=\"p\">,</span> <span class=\"n\">By</span><span class=\"p\">,</span> <span class=\"n\">Keys</span>\n\n<span class=\"n\">chrome</span> <span class=\"o\">=</span> <span class=\"n\">Chrome</span><span class=\"p\">(</span><span class=\"n\">headless</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>                  <span class=\"c1\"># Create a new Chrome browser instance</span>\n<span class=\"n\">driver</span> <span class=\"o\">=</span> <span class=\"n\">chrome</span><span class=\"o\">.</span><span class=\"n\">driver</span>                          <span class=\"c1\">#Get Chromedriver</span>\n<span class=\"n\">chrome</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;https://example.com&quot;</span><span class=\"p\">)</span>               <span class=\"c1\"># Navigate to a webpage</span>\n\n<span class=\"c1\">#Wait for element to load</span>\n<span class=\"n\">locator</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">By</span><span class=\"o\">.</span><span class=\"n\">TAG_NAME</span><span class=\"p\">,</span> <span class=\"s2\">&quot;h1&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">chrome</span><span class=\"o\">.</span><span class=\"n\">wait_for_locator</span><span class=\"p\">(</span><span class=\"n\">locator</span><span class=\"p\">)</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">chrome</span><span class=\"o\">.</span><span class=\"n\">session</span>                              <span class=\"c1\"># Pass selenium session to requests</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;https://www.iana.org/domains/reserved&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># Get a website</span>\n\n<span class=\"c1\"># Get a list of websites</span>\n<span class=\"c1\">## Will randomize requests to not trigger bot detection</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">bulk_get</span><span class=\"p\">([</span><span class=\"s2\">&quot;https://www.iana.org/domains/reserved&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;https://www.example.com&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<p>Integrated with <a href=\"https://github.com/mherrmann/helium\">Helium</a> to make it easier to set up automation.</p>\n\n<p>Helium methods and functions can be used as intended in the <a href=\"https://github.com/mherrmann/helium/blob/master/README.md\">original documentation</a></p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">helium</span>\n<span class=\"n\">helium</span><span class=\"o\">.</span><span class=\"n\">wait_until</span><span class=\"p\">(</span><span class=\"n\">helium</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"s1\">&#39;Download&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Alternatively, helium methods and classes have been collected into two classes <code>Element</code> and <code>Action</code> for convinience</p>\n\n<p><code>Element</code> exposes the following classes: <code>Alert</code>, <code>Button</code>, <code>CheckBox</code>, <code>ComboBox</code>, <code>Image</code>, <code>Link</code>, <code>ListItem</code>, <code>RadioButton</code>, <code>Text</code>, <code>TextField</code> and the method <code>find_all</code></p>\n\n<p><code>Action</code> exposes the following methods: <code>highlight</code>, <code>wait_until</code>, <code>refresh</code>, <code>attach_file</code>, <code>drag_file</code>, <code>combobox_select</code>, <code>hover</code>, <code>write</code>.\n<code>Action</code> also incorporates a <code>Mouse</code> sub-class that collect mouse-related methods.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ak_selenium</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">Action</span><span class=\"p\">,</span> <span class=\"n\">Keys</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">helium</span>\n\n<span class=\"n\">chrome</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://google.com&#39;</span><span class=\"p\">)</span>                      <span class=\"c1\">#Go to website</span>\n<span class=\"n\">Action</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;helium selenium github&#39;</span><span class=\"p\">)</span>                <span class=\"c1\">#Enter text into text field</span>\n<span class=\"n\">helium</span><span class=\"o\">.</span><span class=\"n\">press</span><span class=\"p\">(</span><span class=\"n\">Keys</span><span class=\"o\">.</span><span class=\"n\">ENTER</span><span class=\"p\">)</span>                              <span class=\"c1\">#Press Enter</span>\n<span class=\"n\">Action</span><span class=\"o\">.</span><span class=\"n\">Mouse</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">(</span><span class=\"s1\">&#39;mherrmann/helium&#39;</span><span class=\"p\">)</span>                <span class=\"c1\">#Click</span>\n<span class=\"n\">chrome</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://github.com/login&#39;</span><span class=\"p\">)</span>                <span class=\"c1\">#Goto github</span>\n<span class=\"n\">Action</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;username&#39;</span><span class=\"p\">,</span> <span class=\"n\">into</span><span class=\"o\">=</span><span class=\"s1\">&#39;Username&#39;</span><span class=\"p\">)</span>             <span class=\"c1\">#Enter Username into Username field</span>\n<span class=\"n\">Action</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;password&#39;</span><span class=\"p\">,</span> <span class=\"n\">into</span><span class=\"o\">=</span><span class=\"s1\">&#39;Password&#39;</span><span class=\"p\">)</span>             <span class=\"c1\">#Enter Password into Password field</span>\n<span class=\"n\">Action</span><span class=\"o\">.</span><span class=\"n\">Mouse</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">(</span><span class=\"s1\">&#39;Sign in&#39;</span><span class=\"p\">)</span>                         <span class=\"c1\">#Click Sign-in</span>\n<span class=\"n\">Action</span><span class=\"o\">.</span><span class=\"n\">Mouse</span><span class=\"o\">.</span><span class=\"n\">scroll</span><span class=\"p\">(</span><span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"s1\">&#39;down&#39;</span><span class=\"p\">,</span> <span class=\"n\">num_pixels</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"c1\">#Scroll down 100px</span>\n<span class=\"n\">helium</span><span class=\"o\">.</span><span class=\"n\">kill_browser</span><span class=\"p\">()</span>                                 <span class=\"c1\">#Close the browser</span>\n</code></pre>\n</div>\n\n<h3 id=\"31-additional-options\">3.1. Additional Options</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Selenium Overrides</span>\n<span class=\"c1\">## Overide default useragent</span>\n<span class=\"n\">chrome</span><span class=\"o\">.</span><span class=\"n\">USERAGENT</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) </span><span class=\"se\">\\</span>\n<span class=\"s1\">                    AppleWebKit/537.36 (KHTML, like Gecko) </span><span class=\"se\">\\</span>\n<span class=\"s1\">                    Chrome/83.0.4103.53 Safari/537.36&#39;</span>\n\n<span class=\"c1\">## Override implicit and max wait times for selenium</span>\n<span class=\"n\">chrome</span><span class=\"o\">.</span><span class=\"n\">IMPLICITLY_WAIT_TIME</span> <span class=\"o\">=</span> <span class=\"mi\">3</span> <span class=\"c1\">#seconds</span>\n<span class=\"n\">chrome</span><span class=\"o\">.</span><span class=\"n\">MAX_WAIT_TIME</span> <span class=\"o\">=</span> <span class=\"mi\">5</span> <span class=\"c1\">#seconds</span>\n\n<span class=\"c1\"># Requests.Session Override</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">MIN_REQUEST_GAP</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span> <span class=\"c1\">#seconds between requests</span>\n</code></pre>\n</div>\n\n<!-- Roadmap -->\n\n<h2 id=\"4-roadmap\">4. Roadmap</h2>\n\n<ul>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> Add beautifulsoup integration</li>\n<li><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled> Proxy</li>\n</ul>\n\n<!-- License -->\n\n<h2 id=\"5-license\">5. License</h2>\n\n<p>See LICENSE for more information.</p>\n\n<!-- Contact -->\n\n<h2 id=\"6-contact\">6. Contact</h2>\n\n<p>Arun Kishore - <a href=\"mailto:pypi@rpakishore.co.in\">@rpakishore</a></p>\n\n<p>Project Link: <a href=\"https://github.com/rpakishore/ak_selenium\">https://github.com/rpakishore/ak_selenium</a></p>\n"}, {"fullname": "ak_selenium.browser", "modulename": "ak_selenium.browser", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.browser.Browser", "modulename": "ak_selenium.browser", "qualname": "Browser", "kind": "class", "doc": "<p>General browser class, not to be used directly but to act as a parent class to other specific <code>Browser</code> child classess</p>\n"}, {"fullname": "ak_selenium.browser.Browser.__init__", "modulename": "ak_selenium.browser", "qualname": "Browser.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">driver</span></span>)</span>"}, {"fullname": "ak_selenium.browser.Browser.MAX_WAIT_TIME", "modulename": "ak_selenium.browser", "qualname": "Browser.MAX_WAIT_TIME", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "10"}, {"fullname": "ak_selenium.browser.Browser.IMPLICITLY_WAIT_TIME", "modulename": "ak_selenium.browser", "qualname": "Browser.IMPLICITLY_WAIT_TIME", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "3"}, {"fullname": "ak_selenium.browser.Browser.driver", "modulename": "ak_selenium.browser", "qualname": "Browser.driver", "kind": "variable", "doc": "<p>Selenium webdriver</p>\n"}, {"fullname": "ak_selenium.browser.Browser.wait_for_locator", "modulename": "ak_selenium.browser", "qualname": "Browser.wait_for_locator", "kind": "function", "doc": "<p>Wait until the element with the specified locator is present.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>locator (tuple):</strong>  The locator tuple (By, value) of the element to wait for.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">locator</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_selenium.browser.Browser.fill_userinput_form", "modulename": "ak_selenium.browser", "qualname": "Browser.fill_userinput_form", "kind": "function", "doc": "<p>Fill a user input form element with the specified text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>element (WebElement):</strong>  The input form element.</li>\n<li><strong>text (str):</strong>  The text to fill in the form element.</li>\n<li><strong>clear_existing (bool):</strong>  Whether to clear existing text before filling.                Defaults to True.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">element</span><span class=\"p\">:</span> <span class=\"n\">selenium</span><span class=\"o\">.</span><span class=\"n\">webdriver</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">webelement</span><span class=\"o\">.</span><span class=\"n\">WebElement</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clear_existing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_selenium.browser.Browser.session", "modulename": "ak_selenium.browser", "qualname": "Browser.session", "kind": "variable", "doc": "<p>Generate and return <code>ak_requests.RequestsSession</code> from current browser instance</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>RequestsSession: ak_requests.RequestsSession</p>\n</blockquote>\n", "annotation": ": ak_requests.request.RequestsSession"}, {"fullname": "ak_selenium.browser.Browser.find_element_by_text", "modulename": "ak_selenium.browser", "qualname": "Browser.find_element_by_text", "kind": "function", "doc": "<p>Finds a WebElement from a list based on its text content.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>elements (List[WebElement]):</strong>  The list of WebElements to search through.</li>\n<li><strong>text (str):</strong>  The text to match against the elements' text content.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WebElement | None: The first WebElement that matches the provided text,                or None if no match is found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">elements</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">selenium</span><span class=\"o\">.</span><span class=\"n\">webdriver</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">webelement</span><span class=\"o\">.</span><span class=\"n\">WebElement</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">selenium</span><span class=\"o\">.</span><span class=\"n\">webdriver</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">webelement</span><span class=\"o\">.</span><span class=\"n\">WebElement</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_selenium.browser.Browser.find_button_by_text", "modulename": "ak_selenium.browser", "qualname": "Browser.find_button_by_text", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">selenium</span><span class=\"o\">.</span><span class=\"n\">webdriver</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">webelement</span><span class=\"o\">.</span><span class=\"n\">WebElement</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_selenium.browser.Browser.scroll", "modulename": "ak_selenium.browser", "qualname": "Browser.scroll", "kind": "function", "doc": "<p>Scroll the webpage to the specified direction.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>direction (Literal[\"top\", \"bottom\"]):</strong>  The direction to scroll. Valid values are \"top\" and \"bottom\". Defaults to \"bottom\"</li>\n<li><strong>alternative_method (bool):</strong>  Uses <code>Keys</code> to scroll. Defaults to False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;top&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bottom&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bottom&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">alternative_method</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_selenium.browser.Browser.soup", "modulename": "ak_selenium.browser", "qualname": "Browser.soup", "kind": "variable", "doc": "<p>Returns soup object of current page</p>\n", "annotation": ": bs4.BeautifulSoup"}, {"fullname": "ak_selenium.browser.Browser.halfscreen", "modulename": "ak_selenium.browser", "qualname": "Browser.halfscreen", "kind": "function", "doc": "<p>Set browser to half screen width</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_selenium.browser.Browser.get", "modulename": "ak_selenium.browser", "qualname": "Browser.get", "kind": "function", "doc": "<p>Navigate to a webpage</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>url (str):</strong>  Url to navigate to</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_selenium.chrome", "modulename": "ak_selenium.chrome", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.chrome.Chrome", "modulename": "ak_selenium.chrome", "qualname": "Chrome", "kind": "class", "doc": "<p>General browser class, not to be used directly but to act as a parent class to other specific <code>Browser</code> child classess</p>\n", "bases": "ak_selenium.browser.Browser"}, {"fullname": "ak_selenium.chrome.Chrome.__init__", "modulename": "ak_selenium.chrome", "qualname": "Chrome.__init__", "kind": "function", "doc": "<p>Initialize a chrome instance</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>headless (bool, optional):</strong>  Start in headless mode. Defaults to False.</li>\n<li><strong>chrome_userdata_path (str | None, optional):</strong>  existing <code>userdata</code> path. Defaults to None.</li>\n<li><strong>half_screen (bool, optional):</strong>  split to half-screen width. Defaults to True.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">headless</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">chrome_userdata_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">half_screen</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "ak_selenium.chrome.Chrome.USERAGENT", "modulename": "ak_selenium.chrome", "qualname": "Chrome.USERAGENT", "kind": "variable", "doc": "<p>default fallback useragent</p>\n", "annotation": ": str", "default_value": "&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&#x27;"}, {"fullname": "ak_selenium.chrome.Chrome.headless", "modulename": "ak_selenium.chrome", "qualname": "Chrome.headless", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.chrome.Chrome.half_screen", "modulename": "ak_selenium.chrome", "qualname": "Chrome.half_screen", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.chrome.Chrome.chrome_userdata_path", "modulename": "ak_selenium.chrome", "qualname": "Chrome.chrome_userdata_path", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.chrome.Chrome.driver", "modulename": "ak_selenium.chrome", "qualname": "Chrome.driver", "kind": "variable", "doc": "<p>Selenium webdriver</p>\n", "annotation": ": selenium.webdriver.chrome.webdriver.WebDriver"}, {"fullname": "ak_selenium.chrome.Chrome.options", "modulename": "ak_selenium.chrome", "qualname": "Chrome.options", "kind": "variable", "doc": "<p>Set default <code>webdriver.ChromeOptions</code></p>\n", "annotation": ": selenium.webdriver.chrome.options.Options"}, {"fullname": "ak_selenium.chrome.userdata_path", "modulename": "ak_selenium.chrome", "qualname": "userdata_path", "kind": "function", "doc": "<p>Get Chrome Userdata Path</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>folderpath (str | None):</strong>  Chrome Userdata Path</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str | None: Chrome Userdata Path</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folderpath</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_selenium.firefox", "modulename": "ak_selenium.firefox", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.firefox.Firefox", "modulename": "ak_selenium.firefox", "qualname": "Firefox", "kind": "class", "doc": "<p>General browser class, not to be used directly but to act as a parent class to other specific <code>Browser</code> child classess</p>\n", "bases": "ak_selenium.browser.Browser"}, {"fullname": "ak_selenium.firefox.Firefox.__init__", "modulename": "ak_selenium.firefox", "qualname": "Firefox.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">headless</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">userdata_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">half_screen</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "ak_selenium.firefox.Firefox.USERAGENT", "modulename": "ak_selenium.firefox", "qualname": "Firefox.USERAGENT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/120.0&#x27;"}, {"fullname": "ak_selenium.firefox.Firefox.headless", "modulename": "ak_selenium.firefox", "qualname": "Firefox.headless", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.firefox.Firefox.half_screen", "modulename": "ak_selenium.firefox", "qualname": "Firefox.half_screen", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.firefox.Firefox.userdata_path", "modulename": "ak_selenium.firefox", "qualname": "Firefox.userdata_path", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.firefox.Firefox.driver", "modulename": "ak_selenium.firefox", "qualname": "Firefox.driver", "kind": "variable", "doc": "<p>Selenium webdriver</p>\n", "annotation": ": selenium.webdriver.firefox.webdriver.WebDriver"}, {"fullname": "ak_selenium.firefox.Firefox.profile", "modulename": "ak_selenium.firefox", "qualname": "Firefox.profile", "kind": "variable", "doc": "<p></p>\n", "annotation": ": selenium.webdriver.firefox.firefox_profile.FirefoxProfile"}, {"fullname": "ak_selenium.firefox.Firefox.options", "modulename": "ak_selenium.firefox", "qualname": "Firefox.options", "kind": "variable", "doc": "<p></p>\n", "annotation": ": selenium.webdriver.firefox.options.Options"}, {"fullname": "ak_selenium.helium_attribs", "modulename": "ak_selenium.helium_attribs", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.Alert", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.Alert", "kind": "variable", "doc": "<p>Lets you identify and interact with JavaScript alert boxes.</p>\n", "annotation": ": helium.Alert"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.Button", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.Button", "kind": "variable", "doc": "<p>Lets you identify a button on a web page. A typical usage of <code>Button</code> is::</p>\n\n<pre><code>    click(Button(\"Log In\"))\n</code></pre>\n\n<p><code>Button</code> also lets you read a button's properties. For example, the\nfollowing snippet clicks button \"OK\" only if it exists::</p>\n\n<pre><code>    if Button(\"OK\").exists():\n        click(Button(\"OK\"))\n</code></pre>\n\n<p>When there are multiple occurrences of a button on a page, you can\ndisambiguate between them using the keyword parameters <code>below</code>,\n<code>to_right_of</code>, <code>above</code> and <code>to_left_of</code>. For instance::</p>\n\n<pre><code>    click(Button(\"Log In\", below=TextField(\"Password\")))\n</code></pre>\n", "annotation": ": helium.Button"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.CheckBox", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.CheckBox", "kind": "variable", "doc": "<p>Lets you identify a check box on a web page. To tick a currently unselected\ncheck box, use::</p>\n\n<pre><code>    click(CheckBox(\"I agree\"))\n</code></pre>\n\n<p><code>CheckBox</code> also lets you read the properties of a check box. For example,\nthe method <code>CheckBox.is_checked()</code> can be used to only click a check\nbox if it isn't already checked::</p>\n\n<pre><code>    if not CheckBox(\"I agree\").is_checked():\n        click(CheckBox(\"I agree\"))\n</code></pre>\n\n<p>When there are multiple occurrences of a check box on a page, you can\ndisambiguate between them using the keyword parameters <code>below</code>,\n<code>to_right_of</code>, <code>above</code> and <code>to_left_of</code>. For instance::</p>\n\n<pre><code>    click(CheckBox(\"Stay signed in\", below=Button(\"Sign in\")))\n</code></pre>\n", "annotation": ": helium.CheckBox"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.ComboBox", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.ComboBox", "kind": "variable", "doc": "<p>Lets you identify a combo box on a web page. This can for instance be used\nto determine the current value of a combo box::</p>\n\n<pre><code>    ComboBox(\"Language\").value\n</code></pre>\n\n<p>A ComboBox may be <em>editable</em>, which means that it is possible to type in\narbitrary values in addition to selecting from a predefined drop-down list\nof values. The property <code>ComboBox.is_editable()</code> can be used to\ndetermine whether this is the case for a particular combo box instance.</p>\n\n<p>When there are multiple occurrences of a combo box on a page, you can\ndisambiguate between them using the keyword parameters <code>below</code>,\n<code>to_right_of</code>, <code>above</code> and <code>to_left_of</code>. For instance::</p>\n\n<pre><code>    select(ComboBox(to_right_of=\"John Doe\", below=\"Status\"), \"Active\")\n</code></pre>\n\n<p>This sets the Status of John Doe to Active on the page.</p>\n", "annotation": ": helium.ComboBox"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.Image", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.Image", "kind": "variable", "doc": "<p>Lets you identify an image (HTML <code>&lt;img&gt;</code> element) on a web page.\nTypically, this is done via the image's alt text. For instance::</p>\n\n<pre><code>    click(Image(alt=\"Helium Logo\"))\n</code></pre>\n\n<p>You can also query an image's properties. For example, the following snippet\nclicks on the image with alt text \"Helium Logo\" only if it exists::</p>\n\n<pre><code>    if Image(\"Helium Logo\").exists():\n        click(Image(\"Helium Logo\"))\n</code></pre>\n\n<p>When there are multiple occurrences of an image on a page, you can\ndisambiguate between them using the keyword parameters <code>below</code>,\n<code>to_right_of</code>, <code>above</code> and <code>to_left_of</code>. For instance::</p>\n\n<pre><code>    click(Image(\"Helium Logo\", to_left_of=ListItem(\"Download\")))\n</code></pre>\n", "annotation": ": helium.Image"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.Link", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.Link", "kind": "variable", "doc": "<p>Lets you identify a link on a web page. A typical usage of <code>Link</code> is::</p>\n\n<pre><code>    click(Link(\"Sign in\"))\n</code></pre>\n\n<p>You can also read a <code>Link</code>'s properties. This is most typically used to\ncheck for a link's existence before clicking on it::</p>\n\n<pre><code>    if Link(\"Sign in\").exists():\n        click(Link(\"Sign in\"))\n</code></pre>\n\n<p>When there are multiple occurrences of a link on a page, you can\ndisambiguate between them using the keyword parameters <code>below</code>,\n<code>to_right_of</code>, <code>above</code> and <code>to_left_of</code>. For instance::</p>\n\n<pre><code>    click(Link(\"Block User\", to_right_of=\"John Doe\"))\n</code></pre>\n", "annotation": ": helium.Link"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.ListItem", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.ListItem", "kind": "variable", "doc": "<p>Lets you identify a list item (HTML <code>&lt;li&gt;</code> element) on a web page. This is\noften useful for interacting with elements of a navigation bar::</p>\n\n<pre><code>    click(ListItem(\"News Feed\"))\n</code></pre>\n\n<p>In other cases such as an automated test, you might want to query the\nproperties of a <code>ListItem</code>. For example, the following line checks whether\na list item with text \"List item 1\" exists, and raises an error if not::</p>\n\n<pre><code>    assert ListItem(\"List item 1\").exists()\n</code></pre>\n\n<p>When there are multiple occurrences of a list item on a page, you can\ndisambiguate between them using the keyword parameters <code>below</code>,\n<code>to_right_of</code>, <code>above</code> and <code>to_left_of</code>. For instance::</p>\n\n<pre><code>    click(ListItem(\"List item 1\", below=\"My first list:\"))\n</code></pre>\n", "annotation": ": helium.ListItem"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.RadioButton", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.RadioButton", "kind": "variable", "doc": "<p>Lets you identify a radio button on a web page. To select a currently\nunselected radio button, use::</p>\n\n<pre><code>    click(RadioButton(\"Windows\"))\n</code></pre>\n\n<p><code>RadioButton</code> also lets you read the properties of a radio button. For\nexample, the method <code>RadioButton.is_selected()</code> can be used to only\nclick a radio button if it isn't already selected::</p>\n\n<pre><code>    if not RadioButton(\"Windows\").is_selected():\n        click(RadioButton(\"Windows\"))\n</code></pre>\n\n<p>When there are multiple occurrences of a radio button on a page, you can\ndisambiguate between them using the keyword parameters <code>below</code>,\n<code>to_right_of</code>, <code>above</code> and <code>to_left_of</code>. For instance::</p>\n\n<pre><code>    click(RadioButton(\"I accept\", below=\"License Agreement\"))\n</code></pre>\n", "annotation": ": helium.RadioButton"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.Text", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.Text", "kind": "variable", "doc": "<p>Lets you identify any text or label on a web page. This is most useful for\nchecking whether a particular text exists::</p>\n\n<pre><code>    if Text(\"Do you want to proceed?\").exists():\n        click(\"Yes\")\n</code></pre>\n\n<p><code>Text</code> also makes it possible to read plain text data from a web page. For\nexample, suppose you have a table of people's email addresses. Then you\ncan read John's email addresses as follows::</p>\n\n<pre><code>    Text(below=\"Email\", to_right_of=\"John\").value\n</code></pre>\n\n<p>Similarly to <code>below</code> and <code>to_right_of</code>, the keyword parameters <code>above</code>\nand <code>to_left_of</code> can be used to search for texts above and to the left of\nother web elements.</p>\n", "annotation": ": helium.Text"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.TextField", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.TextField", "kind": "variable", "doc": "<p>Lets you identify a text field on a web page. This is most typically done to\nread the value of a text field. For example::</p>\n\n<pre><code>    TextField(\"First name\").value\n</code></pre>\n\n<p>This returns the value of the \"First name\" text field. If it is empty, the\nempty string \"\" is returned.</p>\n\n<p>When there are multiple occurrences of a text field on a page, you can\ndisambiguate between them using the keyword parameters <code>below</code>,\n<code>to_right_of</code>, <code>above</code> and <code>to_left_of</code>. For instance::</p>\n\n<pre><code>    TextField(\"Address line 1\", below=\"Billing Address:\").value\n</code></pre>\n", "annotation": ": helium.TextField"}, {"fullname": "ak_selenium.helium_attribs.HeliumElements.find_all", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumElements.find_all", "kind": "variable", "doc": "<p>Lets you find all occurrences of the given GUI element predicate. For\ninstance, the following statement returns a list of all buttons with label\n\"Open\"::</p>\n\n<pre><code>    find_all(Button(\"Open\"))\n</code></pre>\n\n<p>Other examples are::</p>\n\n<pre><code>    find_all(Window())\n    find_all(TextField(\"Address line 1\"))\n</code></pre>\n\n<p>The function returns a list of elements of the same type as the passed-in\nparameter. For instance, <code>find_all(Button(...))</code> yields a list whose\nelements are of type <code>Button</code>.</p>\n\n<p>In a typical usage scenario, you want to pick out one of the occurrences\nreturned by <code>find_all()</code>. In such cases, <code>list.sort()</code> can\nbe very useful. For example, to find the leftmost \"Open\" button, you can\nwrite::</p>\n\n<pre><code>    buttons = find_all(Button(\"Open\"))\n    leftmost_button = sorted(buttons, key=lambda button: button.x)[0]\n</code></pre>\n", "annotation": ": Callable"}, {"fullname": "ak_selenium.helium_attribs.MouseActions", "modulename": "ak_selenium.helium_attribs", "qualname": "MouseActions", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.helium_attribs.MouseActions.click", "modulename": "ak_selenium.helium_attribs", "qualname": "MouseActions.click", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>element</strong>:  The element or point to click.</li>\n</ul>\n\n<p>Clicks on the given element or point. Common examples are::</p>\n\n<pre><code>    click(\"Sign in\")\n    click(Button(\"OK\"))\n    click(Point(200, 300))\n    click(ComboBox(\"File type\").top_left + (50, 0))\n</code></pre>\n", "annotation": ": Callable"}, {"fullname": "ak_selenium.helium_attribs.MouseActions.doubleclick", "modulename": "ak_selenium.helium_attribs", "qualname": "MouseActions.doubleclick", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>element</strong>:  The element or point to click.</li>\n</ul>\n\n<p>Performs a double-click on the given element or point. For example::</p>\n\n<pre><code>    doubleclick(\"Double click here\")\n    doubleclick(Image(\"Directories\"))\n    doubleclick(Point(200, 300))\n    doubleclick(TextField(\"Username\").top_left - (0, 20))\n</code></pre>\n", "annotation": ": Callable"}, {"fullname": "ak_selenium.helium_attribs.MouseActions.drag", "modulename": "ak_selenium.helium_attribs", "qualname": "MouseActions.drag", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>element</strong>:  The element or point to drag.</li>\n<li><strong>to</strong>:  The element or point to drag to.</li>\n</ul>\n\n<p>Drags the given element or point to the given location. For example::</p>\n\n<pre><code>    drag(\"Drag me!\", to=\"Drop here.\")\n</code></pre>\n\n<p>The dragging is performed by hovering the mouse cursor over <code>element</code>,\npressing and holding the left mouse button, moving the mouse cursor over\n<code>to</code>, and then releasing the left mouse button again.</p>\n\n<p>This function is exclusively used for dragging elements inside one web page.\nIf you wish to drag a file from the hard disk onto the browser window (eg.\nto initiate a file upload), use function <code>drag_file()</code>.</p>\n", "annotation": ": Callable"}, {"fullname": "ak_selenium.helium_attribs.MouseActions.press_mouse_on", "modulename": "ak_selenium.helium_attribs", "qualname": "MouseActions.press_mouse_on", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Callable"}, {"fullname": "ak_selenium.helium_attribs.MouseActions.release_mouse_over", "modulename": "ak_selenium.helium_attribs", "qualname": "MouseActions.release_mouse_over", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Callable"}, {"fullname": "ak_selenium.helium_attribs.MouseActions.rightclick", "modulename": "ak_selenium.helium_attribs", "qualname": "MouseActions.rightclick", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>element</strong>:  The element or point to click.</li>\n</ul>\n\n<p>Performs a right click on the given element or point. For example::</p>\n\n<pre><code>    rightclick(\"Something\")\n    rightclick(Point(200, 300))\n    rightclick(Image(\"captcha\"))\n</code></pre>\n", "annotation": ": Callable"}, {"fullname": "ak_selenium.helium_attribs.MouseActions.scroll", "modulename": "ak_selenium.helium_attribs", "qualname": "MouseActions.scroll", "kind": "function", "doc": "<p>Scrolls in the specified direction, for the given number of pixels</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;up&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;down&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;down&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_pixels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions.highlight", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions.highlight", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>element</strong>:  The element to highlight.</li>\n</ul>\n\n<p>Highlights the given element on the webpage by drawing a red rectangle\naround it. This is useful for debugging purposes. For example::</p>\n\n<pre><code>    highlight(\"Helium\")\n    highlight(Button(\"Sign in\"))\n</code></pre>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions.wait_until", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions.wait_until", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>condition_fn</strong>:  A function taking no arguments that represents the         condition to be waited for.</li>\n<li><strong>timeout_secs</strong>:  The timeout, in seconds, after which the condition is      deemed to have failed.</li>\n<li><strong>interval_secs</strong>:  The interval, in seconds, at which the condition  function is polled to determine whether the wait has succeeded.</li>\n</ul>\n\n<p>Waits until the given condition function evaluates to true. This is most\ncommonly used to wait for an element to exist::</p>\n\n<pre><code>    wait_until(Text(\"Finished!\").exists)\n</code></pre>\n\n<p>More elaborate conditions are also possible using Python lambda\nexpressions. For instance, to wait until a text no longer exists::</p>\n\n<pre><code>    wait_until(lambda: not Text(\"Uploading...\").exists())\n</code></pre>\n\n<p><code>wait_until</code> raises\n<code>selenium.common.exceptions.TimeoutException</code> if the condition is\nnot satisfied within the given number of seconds. The parameter\n<code>interval_secs</code> specifies the number of seconds Helium waits between\nevaluating the condition function.</p>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions.refresh", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions.refresh", "kind": "variable", "doc": "<p>Refreshes the current page. If an alert dialog is open, then Helium first\ncloses it.</p>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions.attach_file", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions.attach_file", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong>:  The path of the file to be attached.</li>\n<li><strong>to</strong>:  The file input element to which the file should be attached.</li>\n</ul>\n\n<p>Allows attaching a file to a file input element. For instance::</p>\n\n<pre><code>    attach_file(\"c:/test.txt\", to=\"Please select a file:\")\n</code></pre>\n\n<p>The file input element is identified by its label. If you omit the <code>to=</code>\nparameter, then Helium attaches the file to the first file input element it\nfinds on the page.</p>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions.drag_file", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions.drag_file", "kind": "variable", "doc": "<p>Simulates the dragging of a file from the computer over the browser window\nand dropping it over the given element. This allows, for example, to attach\nfiles to emails in Gmail::</p>\n\n<pre><code>    click(\"COMPOSE\")\n    write(\"example@gmail.com\", into=\"To\")\n    write(\"Email subject\", into=\"Subject\")\n    drag_file(r\"C:\\Documents\\notes.txt\", to=\"Drop files here\")\n</code></pre>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions.combobox_select", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions.combobox_select", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>combo_box</strong>:  The combo box whose value should be changed.</li>\n<li><strong>value</strong>:  The visible value of the combo box to be selected.</li>\n</ul>\n\n<p>Selects a value from a combo box. For example::</p>\n\n<pre><code>    select(\"Language\", \"English\")\n    select(ComboBox(\"Language\"), \"English\")\n</code></pre>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions.hover", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions.hover", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>element</strong>:  The element or point to hover.</li>\n</ul>\n\n<p>Hovers the mouse cursor over the given element or point. For example::</p>\n\n<pre><code>    hover(\"File size\")\n    hover(Button(\"OK\"))\n    hover(Link(\"Download\"))\n    hover(Point(200, 300))\n    hover(ComboBox(\"File type\").top_left + (50, 0))\n</code></pre>\n"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions.Mouse", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions.Mouse", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ak_selenium.helium_attribs.MouseActions"}, {"fullname": "ak_selenium.helium_attribs.HeliumActions.write", "modulename": "ak_selenium.helium_attribs", "qualname": "HeliumActions.write", "kind": "variable", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to be written.</li>\n<li><strong>into</strong>:  The element to write into.</li>\n</ul>\n\n<p>Types the given text into the active window. If parameter 'into' is given,\nwrites the text into the text field or element identified by that parameter.\nCommon examples of 'write' are::</p>\n\n<pre><code>    write(\"Hello World!\")\n    write(\"user12345\", into=\"Username:\")\n    write(\"Michael\", into=Alert(\"Please enter your name\"))\n</code></pre>\n"}, {"fullname": "ak_selenium.helium_attribs.Element", "modulename": "ak_selenium.helium_attribs", "qualname": "Element", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ak_selenium.helium_attribs.HeliumElements", "default_value": "Collection of Elements Selector from `helium` module"}, {"fullname": "ak_selenium.helium_attribs.Action", "modulename": "ak_selenium.helium_attribs", "qualname": "Action", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ak_selenium.helium_attribs.HeliumActions", "default_value": "Collection of Actions from `helium` module"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();